{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "389c495b",
   "metadata": {
    "papermill": {
     "duration": 0.008217,
     "end_time": "2024-10-17T17:05:56.534542",
     "exception": false,
     "start_time": "2024-10-17T17:05:56.526325",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## About this Notebook\n",
    "\n",
    "This notebook is adapted from [Ensemble MPNETV2+BGE+GTE with Faiss-GPU](https://www.kaggle.com/code/medali1992/ensemble-mpnetv2-bge-gte-with-faiss-gpu). The original author provided the individual model scores in their notebook, and I experimented with a few parameters to improve the LB score from 0.291 to 0.300. I appreciate the original author's open notebook, and I believe that by experimenting with different parameter combinations, it is possible to further improve the score.\n",
    "\n",
    "## Individual Model LB Scores\n",
    "- `BAAI/bge-large-en-v1.5` → `LB=0.257`\n",
    "- `sentence-transformers/all-mpnet-base-v2` → `LB=0.251`\n",
    "- `Alibaba-NLP/gte-base-en-v1.5` → `LB=0.281`\n",
    "\n",
    "## Version 1\n",
    "The base notebook `LB=0.291`\n",
    "\n",
    "## Version 3\n",
    "weight1, weight2, weight3 = 0.36, 0.33, 0.32 → `LB=0.292`\n",
    "\n",
    "## Version 4\n",
    "weight1, weight2, weight3 = 0.46, 0.34, 0.3 → `LB=0.300`\n",
    "\n",
    "## Version 5\n",
    "weight1, weight2, weight3 = 0.5, 0.35, 0.29 → `LB=0.300`\n",
    "\n",
    "## A Mistake\n",
    "When I was about to publish this notebook and checked it, I realized I had mixed up the order, causing the weights for BGE and MPNET to be swapped. However, it still improved the score. So, if someone wants to modify the code based on my notebook, you can correct the weight order or just leave it as is — as long as it improves the score. I hope my notebook is helpful to you.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dc8808da",
   "metadata": {
    "papermill": {
     "duration": 0.007362,
     "end_time": "2024-10-17T17:05:56.549457",
     "exception": false,
     "start_time": "2024-10-17T17:05:56.542095",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Setting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "10a13570",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-10-17T17:05:56.567519Z",
     "iopub.status.busy": "2024-10-17T17:05:56.566369Z",
     "iopub.status.idle": "2024-10-17T17:05:56.577056Z",
     "shell.execute_reply": "2024-10-17T17:05:56.576261Z"
    },
    "papermill": {
     "duration": 0.021501,
     "end_time": "2024-10-17T17:05:56.579197",
     "exception": false,
     "start_time": "2024-10-17T17:05:56.557696",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "K=25\n",
    "VER=5\n",
    "BS=16\n",
    "D = 1024\n",
    "\n",
    "\n",
    "DATA_PATH = \"/kaggle/input/eedi-mining-misconceptions-in-mathematics\"\n",
    "BGE_MODEL_PATH = \"/kaggle/input/bge-weights-version1/bge_trained_model_version3\"\n",
    "GTE_BASE_MODEL_PATH = \"/kaggle/input/mod-gte-base-weights/gte-base-weights/gte-base_trained_model_version2\"\n",
    "MPNETV2_MODEL_PATH = \"/kaggle/input/mpnet-weights-version1/mpnetV2_trained_model_version3\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b2ec1b17",
   "metadata": {
    "papermill": {
     "duration": 0.007064,
     "end_time": "2024-10-17T17:05:56.594624",
     "exception": false,
     "start_time": "2024-10-17T17:05:56.587560",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Install"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c9174f8e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-17T17:05:56.610258Z",
     "iopub.status.busy": "2024-10-17T17:05:56.609978Z",
     "iopub.status.idle": "2024-10-17T17:05:59.962347Z",
     "shell.execute_reply": "2024-10-17T17:05:59.960836Z"
    },
    "papermill": {
     "duration": 3.363743,
     "end_time": "2024-10-17T17:05:59.965479",
     "exception": false,
     "start_time": "2024-10-17T17:05:56.601736",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "!pip uninstall -qq -y \\\n",
    "polars"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c628cb69",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-17T17:05:59.988188Z",
     "iopub.status.busy": "2024-10-17T17:05:59.987753Z",
     "iopub.status.idle": "2024-10-17T17:06:17.399747Z",
     "shell.execute_reply": "2024-10-17T17:06:17.398528Z"
    },
    "papermill": {
     "duration": 17.425733,
     "end_time": "2024-10-17T17:06:17.402614",
     "exception": false,
     "start_time": "2024-10-17T17:05:59.976881",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "!python -m pip install -qq --no-index --find-links=/kaggle/input/eedi-library-from-sinchiro \\\n",
    "polars\\\n",
    "sentence-transformers\\\n",
    "faiss-gpu"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9aebeb10",
   "metadata": {
    "papermill": {
     "duration": 0.008306,
     "end_time": "2024-10-17T17:06:17.419601",
     "exception": false,
     "start_time": "2024-10-17T17:06:17.411295",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Import "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9916c6a4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-17T17:06:17.438587Z",
     "iopub.status.busy": "2024-10-17T17:06:17.437703Z",
     "iopub.status.idle": "2024-10-17T17:06:41.473804Z",
     "shell.execute_reply": "2024-10-17T17:06:41.472992Z"
    },
    "papermill": {
     "duration": 24.048365,
     "end_time": "2024-10-17T17:06:41.476214",
     "exception": false,
     "start_time": "2024-10-17T17:06:17.427849",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/sentence_transformers/cross_encoder/CrossEncoder.py:13: TqdmExperimentalWarning: Using `tqdm.autonotebook.tqdm` in notebook mode. Use `tqdm.tqdm` instead to force console mode (e.g. in jupyter console)\n",
      "  from tqdm.autonotebook import tqdm, trange\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import gc\n",
    "\n",
    "import polars as pl\n",
    "import numpy as np\n",
    "from scipy import stats\n",
    "import torch\n",
    "import torch.nn.functional as F\n",
    "\n",
    "import faiss\n",
    "\n",
    "from sklearn.metrics.pairwise import cosine_similarity\n",
    "from sentence_transformers import SentenceTransformer\n",
    "os.environ[\"TOKENIZERS_PARALLELISM\"] = \"false\"\n",
    "os.environ['CUDA_VISIBLE_DEVICES'] = \"0,1\"\n",
    "device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d2e55386",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-17T17:06:41.492911Z",
     "iopub.status.busy": "2024-10-17T17:06:41.492285Z",
     "iopub.status.idle": "2024-10-17T17:06:41.496801Z",
     "shell.execute_reply": "2024-10-17T17:06:41.495992Z"
    },
    "papermill": {
     "duration": 0.014796,
     "end_time": "2024-10-17T17:06:41.498657",
     "exception": false,
     "start_time": "2024-10-17T17:06:41.483861",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import sentence_transformers\n",
    "\n",
    "assert pl.__version__ == \"1.7.1\"\n",
    "assert sentence_transformers.__version__ == \"3.1.1\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eaaa62df",
   "metadata": {
    "papermill": {
     "duration": 0.007075,
     "end_time": "2024-10-17T17:06:41.512873",
     "exception": false,
     "start_time": "2024-10-17T17:06:41.505798",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Data Load"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c09842d4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-17T17:06:41.528582Z",
     "iopub.status.busy": "2024-10-17T17:06:41.528057Z",
     "iopub.status.idle": "2024-10-17T17:06:41.547771Z",
     "shell.execute_reply": "2024-10-17T17:06:41.547029Z"
    },
    "papermill": {
     "duration": 0.029671,
     "end_time": "2024-10-17T17:06:41.549681",
     "exception": false,
     "start_time": "2024-10-17T17:06:41.520010",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test = pl.read_csv(f\"{DATA_PATH}/test.csv\")\n",
    "misconception_mapping = pl.read_csv(f\"{DATA_PATH}/misconception_mapping.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d797d876",
   "metadata": {
    "papermill": {
     "duration": 0.007056,
     "end_time": "2024-10-17T17:06:41.564135",
     "exception": false,
     "start_time": "2024-10-17T17:06:41.557079",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Preprocess"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e9db6c83",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-17T17:06:41.579937Z",
     "iopub.status.busy": "2024-10-17T17:06:41.579631Z",
     "iopub.status.idle": "2024-10-17T17:06:41.600974Z",
     "shell.execute_reply": "2024-10-17T17:06:41.600218Z"
    },
    "papermill": {
     "duration": 0.031579,
     "end_time": "2024-10-17T17:06:41.602874",
     "exception": false,
     "start_time": "2024-10-17T17:06:41.571295",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><style>\n",
       ".dataframe > thead > tr,\n",
       ".dataframe > tbody > tr {\n",
       "  text-align: right;\n",
       "  white-space: pre-wrap;\n",
       "}\n",
       "</style>\n",
       "<small>shape: (5, 10)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>QuestionId</th><th>ConstructName</th><th>SubjectName</th><th>QuestionText</th><th>CorrectAnswer</th><th>AnswerType</th><th>AnswerText</th><th>AllText</th><th>AnswerAlphabet</th><th>QuestionId_Answer</th></tr><tr><td>i64</td><td>str</td><td>str</td><td>str</td><td>str</td><td>str</td><td>str</td><td>str</td><td>str</td><td>str</td></tr></thead><tbody><tr><td>1869</td><td>&quot;Use the order of operations to…</td><td>&quot;BIDMAS&quot;</td><td>&quot;\\[\n",
       "3 \\times 2+4-5\n",
       "\\]\n",
       "Where do …</td><td>&quot;A&quot;</td><td>&quot;AnswerAText&quot;</td><td>&quot;\\( 3 \\times(2+4)-5 \\)&quot;</td><td>&quot;&lt;Construct&gt; Use the order of o…</td><td>&quot;A&quot;</td><td>&quot;1869_A&quot;</td></tr><tr><td>1869</td><td>&quot;Use the order of operations to…</td><td>&quot;BIDMAS&quot;</td><td>&quot;\\[\n",
       "3 \\times 2+4-5\n",
       "\\]\n",
       "Where do …</td><td>&quot;A&quot;</td><td>&quot;AnswerBText&quot;</td><td>&quot;\\( 3 \\times 2+(4-5) \\)&quot;</td><td>&quot;&lt;Construct&gt; Use the order of o…</td><td>&quot;B&quot;</td><td>&quot;1869_B&quot;</td></tr><tr><td>1869</td><td>&quot;Use the order of operations to…</td><td>&quot;BIDMAS&quot;</td><td>&quot;\\[\n",
       "3 \\times 2+4-5\n",
       "\\]\n",
       "Where do …</td><td>&quot;A&quot;</td><td>&quot;AnswerCText&quot;</td><td>&quot;\\( 3 \\times(2+4-5) \\)&quot;</td><td>&quot;&lt;Construct&gt; Use the order of o…</td><td>&quot;C&quot;</td><td>&quot;1869_C&quot;</td></tr><tr><td>1869</td><td>&quot;Use the order of operations to…</td><td>&quot;BIDMAS&quot;</td><td>&quot;\\[\n",
       "3 \\times 2+4-5\n",
       "\\]\n",
       "Where do …</td><td>&quot;A&quot;</td><td>&quot;AnswerDText&quot;</td><td>&quot;Does not need brackets&quot;</td><td>&quot;&lt;Construct&gt; Use the order of o…</td><td>&quot;D&quot;</td><td>&quot;1869_D&quot;</td></tr><tr><td>1870</td><td>&quot;Simplify an algebraic fraction…</td><td>&quot;Simplifying Algebraic Fraction…</td><td>&quot;Simplify the following, if pos…</td><td>&quot;D&quot;</td><td>&quot;AnswerAText&quot;</td><td>&quot;\\( m+1 \\)&quot;</td><td>&quot;&lt;Construct&gt; Simplify an algebr…</td><td>&quot;A&quot;</td><td>&quot;1870_A&quot;</td></tr></tbody></table></div>"
      ],
      "text/plain": [
       "shape: (5, 10)\n",
       "┌───────────┬───────────┬───────────┬───────────┬───┬───────────┬───────────┬───────────┬──────────┐\n",
       "│ QuestionI ┆ Construct ┆ SubjectNa ┆ QuestionT ┆ … ┆ AnswerTex ┆ AllText   ┆ AnswerAlp ┆ Question │\n",
       "│ d         ┆ Name      ┆ me        ┆ ext       ┆   ┆ t         ┆ ---       ┆ habet     ┆ Id_Answe │\n",
       "│ ---       ┆ ---       ┆ ---       ┆ ---       ┆   ┆ ---       ┆ str       ┆ ---       ┆ r        │\n",
       "│ i64       ┆ str       ┆ str       ┆ str       ┆   ┆ str       ┆           ┆ str       ┆ ---      │\n",
       "│           ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆ str      │\n",
       "╞═══════════╪═══════════╪═══════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪══════════╡\n",
       "│ 1869      ┆ Use the   ┆ BIDMAS    ┆ \\[        ┆ … ┆ \\( 3 \\tim ┆ <Construc ┆ A         ┆ 1869_A   │\n",
       "│           ┆ order of  ┆           ┆ 3 \\times  ┆   ┆ es(2+4)-5 ┆ t> Use    ┆           ┆          │\n",
       "│           ┆ operation ┆           ┆ 2+4-5     ┆   ┆ \\)        ┆ the order ┆           ┆          │\n",
       "│           ┆ s to…     ┆           ┆ \\]        ┆   ┆           ┆ of o…     ┆           ┆          │\n",
       "│           ┆           ┆           ┆ Where do  ┆   ┆           ┆           ┆           ┆          │\n",
       "│           ┆           ┆           ┆ …         ┆   ┆           ┆           ┆           ┆          │\n",
       "│ 1869      ┆ Use the   ┆ BIDMAS    ┆ \\[        ┆ … ┆ \\( 3      ┆ <Construc ┆ B         ┆ 1869_B   │\n",
       "│           ┆ order of  ┆           ┆ 3 \\times  ┆   ┆ \\times    ┆ t> Use    ┆           ┆          │\n",
       "│           ┆ operation ┆           ┆ 2+4-5     ┆   ┆ 2+(4-5)   ┆ the order ┆           ┆          │\n",
       "│           ┆ s to…     ┆           ┆ \\]        ┆   ┆ \\)        ┆ of o…     ┆           ┆          │\n",
       "│           ┆           ┆           ┆ Where do  ┆   ┆           ┆           ┆           ┆          │\n",
       "│           ┆           ┆           ┆ …         ┆   ┆           ┆           ┆           ┆          │\n",
       "│ 1869      ┆ Use the   ┆ BIDMAS    ┆ \\[        ┆ … ┆ \\( 3 \\tim ┆ <Construc ┆ C         ┆ 1869_C   │\n",
       "│           ┆ order of  ┆           ┆ 3 \\times  ┆   ┆ es(2+4-5) ┆ t> Use    ┆           ┆          │\n",
       "│           ┆ operation ┆           ┆ 2+4-5     ┆   ┆ \\)        ┆ the order ┆           ┆          │\n",
       "│           ┆ s to…     ┆           ┆ \\]        ┆   ┆           ┆ of o…     ┆           ┆          │\n",
       "│           ┆           ┆           ┆ Where do  ┆   ┆           ┆           ┆           ┆          │\n",
       "│           ┆           ┆           ┆ …         ┆   ┆           ┆           ┆           ┆          │\n",
       "│ 1869      ┆ Use the   ┆ BIDMAS    ┆ \\[        ┆ … ┆ Does not  ┆ <Construc ┆ D         ┆ 1869_D   │\n",
       "│           ┆ order of  ┆           ┆ 3 \\times  ┆   ┆ need      ┆ t> Use    ┆           ┆          │\n",
       "│           ┆ operation ┆           ┆ 2+4-5     ┆   ┆ brackets  ┆ the order ┆           ┆          │\n",
       "│           ┆ s to…     ┆           ┆ \\]        ┆   ┆           ┆ of o…     ┆           ┆          │\n",
       "│           ┆           ┆           ┆ Where do  ┆   ┆           ┆           ┆           ┆          │\n",
       "│           ┆           ┆           ┆ …         ┆   ┆           ┆           ┆           ┆          │\n",
       "│ 1870      ┆ Simplify  ┆ Simplifyi ┆ Simplify  ┆ … ┆ \\( m+1 \\) ┆ <Construc ┆ A         ┆ 1870_A   │\n",
       "│           ┆ an        ┆ ng        ┆ the follo ┆   ┆           ┆ t>        ┆           ┆          │\n",
       "│           ┆ algebraic ┆ Algebraic ┆ wing, if  ┆   ┆           ┆ Simplify  ┆           ┆          │\n",
       "│           ┆ fraction… ┆ Fraction… ┆ pos…      ┆   ┆           ┆ an        ┆           ┆          │\n",
       "│           ┆           ┆           ┆           ┆   ┆           ┆ algebr…   ┆           ┆          │\n",
       "└───────────┴───────────┴───────────┴───────────┴───┴───────────┴───────────┴───────────┴──────────┘"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "common_col = [\n",
    "    \"QuestionId\",\n",
    "    \"ConstructName\",\n",
    "    \"SubjectName\",\n",
    "    \"QuestionText\",\n",
    "    \"CorrectAnswer\",\n",
    "]\n",
    "\n",
    "test_long = (\n",
    "    test\n",
    "    .select(\n",
    "        pl.col(common_col + [f\"Answer{alpha}Text\" for alpha in [\"A\", \"B\", \"C\", \"D\"]])\n",
    "    )\n",
    "    .unpivot(\n",
    "        index=common_col,\n",
    "        variable_name=\"AnswerType\",\n",
    "        value_name=\"AnswerText\",\n",
    "    )\n",
    "    .with_columns(\n",
    "        pl.concat_str(\n",
    "            [\n",
    "               '<Construct> ' +  pl.col(\"ConstructName\"),\n",
    "               '<Subject> ' + pl.col(\"SubjectName\"),\n",
    "               '<Question> '+ pl.col(\"QuestionText\"),\n",
    "               '<Answer> ' + pl.col(\"AnswerText\"),\n",
    "            ],\n",
    "            separator=\" \",\n",
    "        ).alias(\"AllText\"),\n",
    "        pl.col(\"AnswerType\").str.extract(r\"Answer([A-D])Text$\").alias(\"AnswerAlphabet\"),\n",
    "    )\n",
    "    .with_columns(\n",
    "        pl.concat_str(\n",
    "            [pl.col(\"QuestionId\"), pl.col(\"AnswerAlphabet\")], separator=\"_\"\n",
    "        ).alias(\"QuestionId_Answer\"),\n",
    "    )\n",
    "    .sort(\"QuestionId_Answer\")\n",
    ")\n",
    "test_long.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "303f47c9",
   "metadata": {
    "papermill": {
     "duration": 0.007519,
     "end_time": "2024-10-17T17:06:41.618135",
     "exception": false,
     "start_time": "2024-10-17T17:06:41.610616",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Sentence transformer models"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "952ed146",
   "metadata": {
    "papermill": {
     "duration": 0.007484,
     "end_time": "2024-10-17T17:06:41.633220",
     "exception": false,
     "start_time": "2024-10-17T17:06:41.625736",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Utils"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "43346fb9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-17T17:06:41.651719Z",
     "iopub.status.busy": "2024-10-17T17:06:41.651393Z",
     "iopub.status.idle": "2024-10-17T17:06:41.663153Z",
     "shell.execute_reply": "2024-10-17T17:06:41.662273Z"
    },
    "papermill": {
     "duration": 0.023869,
     "end_time": "2024-10-17T17:06:41.665015",
     "exception": false,
     "start_time": "2024-10-17T17:06:41.641146",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def encode_texts(test_long, misconception_mapping, model_path, batch_size=8, progress_bar=True):\n",
    "    model = SentenceTransformer(model_path, local_files_only=True, trust_remote_code=True)\n",
    "    model.to(device)\n",
    "    # wrap the model to use all GPUs\n",
    "    model = torch.nn.DataParallel(model)\n",
    "    model.eval()\n",
    "    \n",
    "    # Encode all text from the test_long DataFrame\n",
    "    all_text_vec = model.module.encode(test_long[\"AllText\"].to_list(), batch_size=batch_size , normalize_embeddings=True, show_progress_bar=progress_bar)\n",
    "    \n",
    "    # Encode misconception names from the misconception_mapping DataFrame\n",
    "    misconception_mapping_vec = model.module.encode(misconception_mapping[\"MisconceptionName\"].to_list(), batch_size=batch_size, normalize_embeddings=True, show_progress_bar=progress_bar)\n",
    "    \n",
    "    torch.cuda.empty_cache()\n",
    "    gc.collect()\n",
    "    \n",
    "    return all_text_vec, misconception_mapping_vec\n",
    "\n",
    "def search_faiss(k, d, vectors_to_add, query_vectors):\n",
    "    \"\"\"\n",
    "    Perform a FAISS search with L2 distance.\n",
    "    \n",
    "    Parameters:\n",
    "        k (int): Number of nearest neighbors to search for.\n",
    "        d (int): Dimension of the vectors.\n",
    "        vectors_to_add (numpy.ndarray): The vectors to add to the FAISS index.\n",
    "        query_vectors (numpy.ndarray): The vectors to search for the nearest neighbors.\n",
    "        \n",
    "    Returns:\n",
    "        D (numpy.ndarray): The distances to the k nearest neighbors.\n",
    "        I (numpy.ndarray): The indices of the k nearest neighbors.\n",
    "    \"\"\"\n",
    "    # Create the index\n",
    "    index = faiss.IndexFlatL2(d)\n",
    "    \n",
    "    # Add vectors to the index\n",
    "    index.add(vectors_to_add)\n",
    "    \n",
    "    # Search for k nearest neighbors\n",
    "    D, I = index.search(query_vectors, k)\n",
    "    \n",
    "    return D, I\n",
    "\n",
    "def ensemble_majority_vote(*indices):\n",
    "    \"\"\"\n",
    "    Apply ensembling with majority voting across multiple index arrays.\n",
    "    \n",
    "    Parameters:\n",
    "        indices (numpy.ndarray): Variable number of index arrays to ensemble.\n",
    "        \n",
    "    Returns:\n",
    "        numpy.ndarray: The majority-voted indices.\n",
    "    \"\"\"\n",
    "    # Stack indices along a new axis (shape: (num_searches, num_queries, k))\n",
    "    stacked_indices = np.stack(indices, axis=0)\n",
    "    \n",
    "    # Apply mode to find the majority vote along the first axis (searches)\n",
    "    majority_indices, _ = stats.mode(stacked_indices, axis=0)\n",
    "    \n",
    "    # Remove the extra dimension added by mode and return the majority-voted indices\n",
    "    return majority_indices.squeeze()\n",
    "\n",
    "def ensemble_random_choice(*indices):\n",
    "    \"\"\"\n",
    "    Apply ensembling with random choice across multiple index arrays.\n",
    "    \n",
    "    Parameters:\n",
    "        indices (numpy.ndarray): Variable number of index arrays to ensemble.\n",
    "        \n",
    "    Returns:\n",
    "        numpy.ndarray: Randomly selected indices from the given index arrays.\n",
    "    \"\"\"\n",
    "    # Stack indices along a new axis (shape: (num_searches, num_queries, k))\n",
    "    stacked_indices = np.stack(indices, axis=0)\n",
    "    \n",
    "    # Number of searches (i.e., how many index arrays we have)\n",
    "    num_searches = stacked_indices.shape[0]\n",
    "    \n",
    "    # Randomly choose indices from the 3 arrays\n",
    "    # For each query and each nearest neighbor (k), randomly select an index from the available searches\n",
    "    random_choices = np.random.randint(0, num_searches, size=stacked_indices.shape[1:])\n",
    "    \n",
    "    # Use the random choices to pick the corresponding indices\n",
    "    random_indices = np.choose(random_choices, stacked_indices)\n",
    "    \n",
    "    return random_indices"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "50837cd3",
   "metadata": {
    "papermill": {
     "duration": 0.007389,
     "end_time": "2024-10-17T17:06:41.679906",
     "exception": false,
     "start_time": "2024-10-17T17:06:41.672517",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## GTE-base Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "cf6af2cf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-17T17:06:41.696284Z",
     "iopub.status.busy": "2024-10-17T17:06:41.695980Z",
     "iopub.status.idle": "2024-10-17T17:06:53.463648Z",
     "shell.execute_reply": "2024-10-17T17:06:53.462384Z"
    },
    "papermill": {
     "duration": 11.778696,
     "end_time": "2024-10-17T17:06:53.466061",
     "exception": false,
     "start_time": "2024-10-17T17:06:41.687365",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5c81cddb4d2b494e90a1dec801993e08",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Batches:   0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "36d60b6d36f540c39e4c547cd11c9b37",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Batches:   0%|          | 0/162 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(12, 1024)\n",
      "(2587, 1024)\n"
     ]
    }
   ],
   "source": [
    "gte_base_all_text_vec, gte_misconception_mapping_vec = encode_texts(test_long, misconception_mapping, GTE_BASE_MODEL_PATH, BS)\n",
    "gte_base_all_text_vec = np.pad(gte_base_all_text_vec, ((0, 0), (0, 256)), mode='constant')\n",
    "gte_misconception_mapping_vec = np.pad(gte_misconception_mapping_vec, ((0, 0), (0, 256)), mode='constant')\n",
    "print(gte_base_all_text_vec.shape)\n",
    "print(gte_misconception_mapping_vec.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a11c7ec",
   "metadata": {
    "papermill": {
     "duration": 0.008684,
     "end_time": "2024-10-17T17:06:53.483990",
     "exception": false,
     "start_time": "2024-10-17T17:06:53.475306",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## MPNETV2 Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8dde4db5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-17T17:06:53.502384Z",
     "iopub.status.busy": "2024-10-17T17:06:53.502045Z",
     "iopub.status.idle": "2024-10-17T17:07:02.277658Z",
     "shell.execute_reply": "2024-10-17T17:07:02.276142Z"
    },
    "papermill": {
     "duration": 8.78734,
     "end_time": "2024-10-17T17:07:02.279967",
     "exception": false,
     "start_time": "2024-10-17T17:06:53.492627",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "70a3cccd34274e37949392f334362508",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Batches:   0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ebc3d1b28aa74a0ebbbddbc2e376b611",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Batches:   0%|          | 0/162 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(12, 1024)\n",
      "(2587, 1024)\n"
     ]
    }
   ],
   "source": [
    "mpnetv2_base_all_text_vec, mpnetv2_misconception_mapping_vec = encode_texts(test_long, misconception_mapping, MPNETV2_MODEL_PATH, BS)\n",
    "mpnetv2_base_all_text_vec = np.pad(mpnetv2_base_all_text_vec, ((0, 0), (0, 256)), mode='constant')\n",
    "mpnetv2_misconception_mapping_vec = np.pad(mpnetv2_misconception_mapping_vec, ((0, 0), (0, 256)), mode='constant')\n",
    "print(mpnetv2_base_all_text_vec.shape)\n",
    "print(mpnetv2_misconception_mapping_vec.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6410e920",
   "metadata": {
    "papermill": {
     "duration": 0.008063,
     "end_time": "2024-10-17T17:07:02.296700",
     "exception": false,
     "start_time": "2024-10-17T17:07:02.288637",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## BGE Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "fe7eae22",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-17T17:07:02.314969Z",
     "iopub.status.busy": "2024-10-17T17:07:02.314387Z",
     "iopub.status.idle": "2024-10-17T17:07:25.541944Z",
     "shell.execute_reply": "2024-10-17T17:07:25.540894Z"
    },
    "papermill": {
     "duration": 23.239124,
     "end_time": "2024-10-17T17:07:25.544067",
     "exception": false,
     "start_time": "2024-10-17T17:07:02.304943",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2cf03fda05d445dea5117a14cf7f3b13",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Batches:   0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "4801d33ed13b4e7baaf127b8cb5aec2a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Batches:   0%|          | 0/162 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(12, 1024)\n"
     ]
    }
   ],
   "source": [
    "bge_base_all_text_vec, bge_misconception_mapping_vec = encode_texts(test_long, misconception_mapping, BGE_MODEL_PATH, BS)\n",
    "print(bge_base_all_text_vec.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "035ecb15",
   "metadata": {
    "papermill": {
     "duration": 0.008651,
     "end_time": "2024-10-17T17:07:25.561899",
     "exception": false,
     "start_time": "2024-10-17T17:07:25.553248",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Model ensemble"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "9f1d8780",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-17T17:07:25.581174Z",
     "iopub.status.busy": "2024-10-17T17:07:25.580827Z",
     "iopub.status.idle": "2024-10-17T17:07:25.957621Z",
     "shell.execute_reply": "2024-10-17T17:07:25.956754Z"
    },
    "papermill": {
     "duration": 0.3892,
     "end_time": "2024-10-17T17:07:25.959932",
     "exception": false,
     "start_time": "2024-10-17T17:07:25.570732",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(12, 1024)\n",
      "(2587, 1024)\n",
      "(12, 25)\n"
     ]
    }
   ],
   "source": [
    "weight1, weight2, weight3 = 0.5, 0.35, 0.29\n",
    "\n",
    "\n",
    "# ensemble_text_vecs = np.mean(np.stack([gte_base_all_text_vec, bge_base_all_text_vec, mpnetv2_base_all_text_vec]), axis=0)\n",
    "# ensemble_misconception_vecs = np.mean(np.stack([gte_misconception_mapping_vec, mpnetv2_misconception_mapping_vec, gte_misconception_mapping_vec]), axis=0)\n",
    "# _, ensemble_indices = search_faiss(K, D, ensemble_misconception_vecs, ensemble_text_vecs)\n",
    "\n",
    "ensemble_text_vecs = (weight1 * gte_base_all_text_vec + weight2 * bge_base_all_text_vec + weight3 * mpnetv2_base_all_text_vec)\n",
    "\n",
    "ensemble_misconception_vecs = (weight1 * gte_misconception_mapping_vec + weight2 * mpnetv2_misconception_mapping_vec + weight3 * bge_misconception_mapping_vec)\n",
    "\n",
    "_, ensemble_indices = search_faiss(K, D, ensemble_misconception_vecs, ensemble_text_vecs)\n",
    "print(ensemble_text_vecs.shape)\n",
    "print(ensemble_misconception_vecs.shape)\n",
    "print(ensemble_indices.shape)\n",
    "\n",
    "del ensemble_text_vecs, ensemble_misconception_vecs, gte_base_all_text_vec, bge_base_all_text_vec, mpnetv2_base_all_text_vec, gte_misconception_mapping_vec, mpnetv2_misconception_mapping_vec \n",
    "_ = gc.collect()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8af9d176",
   "metadata": {
    "papermill": {
     "duration": 0.010161,
     "end_time": "2024-10-17T17:07:25.980684",
     "exception": false,
     "start_time": "2024-10-17T17:07:25.970523",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Make Submit File"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "a8fd7ace",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-17T17:07:26.002276Z",
     "iopub.status.busy": "2024-10-17T17:07:26.001927Z",
     "iopub.status.idle": "2024-10-17T17:07:26.013685Z",
     "shell.execute_reply": "2024-10-17T17:07:26.012844Z"
    },
    "papermill": {
     "duration": 0.024985,
     "end_time": "2024-10-17T17:07:26.015831",
     "exception": false,
     "start_time": "2024-10-17T17:07:25.990846",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "submission = (\n",
    "    test_long.with_columns(\n",
    "        pl.Series(ensemble_indices[:, :25].tolist()).alias(\"MisconceptionId\")\n",
    "    )\n",
    "    .with_columns(\n",
    "        pl.col(\"MisconceptionId\").map_elements(\n",
    "            lambda x: \" \".join(map(str, x)), return_dtype=pl.String\n",
    "        )\n",
    "    ).filter(\n",
    "        pl.col(\"CorrectAnswer\") != pl.col(\"AnswerAlphabet\")\n",
    "    ).select(\n",
    "        pl.col([\"QuestionId_Answer\", \"MisconceptionId\"])\n",
    "    ).sort(\"QuestionId_Answer\")\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "8c6c29ce",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-17T17:07:26.037965Z",
     "iopub.status.busy": "2024-10-17T17:07:26.037586Z",
     "iopub.status.idle": "2024-10-17T17:07:26.044669Z",
     "shell.execute_reply": "2024-10-17T17:07:26.043715Z"
    },
    "papermill": {
     "duration": 0.020591,
     "end_time": "2024-10-17T17:07:26.046833",
     "exception": false,
     "start_time": "2024-10-17T17:07:26.026242",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><style>\n",
       ".dataframe > thead > tr,\n",
       ".dataframe > tbody > tr {\n",
       "  text-align: right;\n",
       "  white-space: pre-wrap;\n",
       "}\n",
       "</style>\n",
       "<small>shape: (5, 2)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>QuestionId_Answer</th><th>MisconceptionId</th></tr><tr><td>str</td><td>str</td></tr></thead><tbody><tr><td>&quot;1869_B&quot;</td><td>&quot;2488 1345 775 1085 1005 1885 1…</td></tr><tr><td>&quot;1869_C&quot;</td><td>&quot;2488 1345 1005 1792 1085 775 2…</td></tr><tr><td>&quot;1869_D&quot;</td><td>&quot;2488 1345 1084 1392 1005 2306 …</td></tr><tr><td>&quot;1870_A&quot;</td><td>&quot;363 1593 979 2307 2398 80 2068…</td></tr><tr><td>&quot;1870_B&quot;</td><td>&quot;363 1593 979 2307 2398 80 59 2…</td></tr></tbody></table></div>"
      ],
      "text/plain": [
       "shape: (5, 2)\n",
       "┌───────────────────┬─────────────────────────────────┐\n",
       "│ QuestionId_Answer ┆ MisconceptionId                 │\n",
       "│ ---               ┆ ---                             │\n",
       "│ str               ┆ str                             │\n",
       "╞═══════════════════╪═════════════════════════════════╡\n",
       "│ 1869_B            ┆ 2488 1345 775 1085 1005 1885 1… │\n",
       "│ 1869_C            ┆ 2488 1345 1005 1792 1085 775 2… │\n",
       "│ 1869_D            ┆ 2488 1345 1084 1392 1005 2306 … │\n",
       "│ 1870_A            ┆ 363 1593 979 2307 2398 80 2068… │\n",
       "│ 1870_B            ┆ 363 1593 979 2307 2398 80 59 2… │\n",
       "└───────────────────┴─────────────────────────────────┘"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "submission.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e1e3bdc7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-17T17:07:26.068403Z",
     "iopub.status.busy": "2024-10-17T17:07:26.068104Z",
     "iopub.status.idle": "2024-10-17T17:07:26.072792Z",
     "shell.execute_reply": "2024-10-17T17:07:26.071960Z"
    },
    "papermill": {
     "duration": 0.017906,
     "end_time": "2024-10-17T17:07:26.074934",
     "exception": false,
     "start_time": "2024-10-17T17:07:26.057028",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "submission.write_csv(\"submission.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a5b9f02",
   "metadata": {
    "papermill": {
     "duration": 0.010007,
     "end_time": "2024-10-17T17:07:26.095214",
     "exception": false,
     "start_time": "2024-10-17T17:07:26.085207",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# "
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "databundleVersionId": 9738540,
     "sourceId": 82695,
     "sourceType": "competition"
    },
    {
     "datasetId": 5755831,
     "sourceId": 9502328,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 5750064,
     "sourceId": 9503395,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 5784947,
     "sourceId": 9534632,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 5896121,
     "sourceId": 9652644,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 5896133,
     "sourceId": 9652660,
     "sourceType": "datasetVersion"
    },
    {
     "sourceId": 199269375,
     "sourceType": "kernelVersion"
    }
   ],
   "dockerImageVersionId": 30775,
   "isGpuEnabled": true,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 95.888961,
   "end_time": "2024-10-17T17:07:29.327625",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-10-17T17:05:53.438664",
   "version": "2.6.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "03f5081ed2134a6486d4307b6aa1eae3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_b0c42ad4893f4bcd922b643d4c1c9661",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_971daf0512cb4c92aff6f878b9d0e7c7",
       "value": 1.0
      }
     },
     "07816d7d94df41a292d84a1e0da8750c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_9661b40d5539487e9e893116c8d82369",
       "placeholder": "​",
       "style": "IPY_MODEL_73e9495b7c8340c2989545e078974404",
       "value": " 162/162 [00:09&lt;00:00, 23.98it/s]"
      }
     },
     "09ab84ef61a4413fbe1d68503666b03f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_3413d86bddbf41ec9cf7caa5dda58996",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_b487daee55ee42289d0927916c878169",
       "value": 1.0
      }
     },
     "123629fb6def47b28a8c28179f8a6987": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "16b57720d9fe433e94da89538ef24734": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_281a6f0d72c34ae7b5a028b478f2782f",
       "placeholder": "​",
       "style": "IPY_MODEL_3efaaa6ca9674a29a5c57ca5ad1f9cce",
       "value": " 1/1 [00:00&lt;00:00,  1.10it/s]"
      }
     },
     "1b534995e5d749f78b12403e29676883": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_920ace06238b48658e2964f8740a7a18",
       "placeholder": "​",
       "style": "IPY_MODEL_e90294d08dea4c8eb7f48a0fc3f93693",
       "value": " 162/162 [00:04&lt;00:00, 32.16it/s]"
      }
     },
     "26b90cfc94204c9c8e879a831cf0becb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "281a6f0d72c34ae7b5a028b478f2782f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "29332d9e289d40edb7a2667444bd1dd6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "2a9502a55d3d4823824eda9d2576d80e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2cf03fda05d445dea5117a14cf7f3b13": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_4c081f2268f84b01a55ae843899de878",
        "IPY_MODEL_09ab84ef61a4413fbe1d68503666b03f",
        "IPY_MODEL_16b57720d9fe433e94da89538ef24734"
       ],
       "layout": "IPY_MODEL_123629fb6def47b28a8c28179f8a6987"
      }
     },
     "2f544ebd41a94be3bfb3b63df88330e8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "3413d86bddbf41ec9cf7caa5dda58996": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "36d60b6d36f540c39e4c547cd11c9b37": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_90bdd49159ae4685bafa1e9f250cd4d1",
        "IPY_MODEL_f3a4fcb410354877a5917b8344cb16b0",
        "IPY_MODEL_1b534995e5d749f78b12403e29676883"
       ],
       "layout": "IPY_MODEL_baab9d0f10854fd6bd87cbe75a0655f6"
      }
     },
     "378036cdca294e4e9889f892b365741a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "379999ebfd884563b6051e9e2c24e341": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "3a30016b44a048d9bb2ee23bd2ff688c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_a06ccfe8a75a4baca328e43e5b8ec361",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_decd1342c1c0455eaa2648ddc6c98839",
       "value": 1.0
      }
     },
     "3efaaa6ca9674a29a5c57ca5ad1f9cce": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "413de19a7ff240869c3c90abf564fa66": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4323d0481b0043cb945f8bed0a50d257": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "4801d33ed13b4e7baaf127b8cb5aec2a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_7533891afc7d4d1880203a33ba571980",
        "IPY_MODEL_d9e9cb9cf01b4106bb6ac8104225888c",
        "IPY_MODEL_07816d7d94df41a292d84a1e0da8750c"
       ],
       "layout": "IPY_MODEL_f3962934ec9344e58188080d8cc61b32"
      }
     },
     "4bd94efd52fd4abd89e8e62850ed423c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4c081f2268f84b01a55ae843899de878": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_4bd94efd52fd4abd89e8e62850ed423c",
       "placeholder": "​",
       "style": "IPY_MODEL_cee6a1a3ea284cf6ae4b6159ba0482d5",
       "value": "Batches: 100%"
      }
     },
     "4d0386d99c9f49eaa34719a50a5f7c7b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4f08a6f3e7b4481baf890cd0a0fdb845": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "56ed9d7809ac40ada4a35d8efb53dbc9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5c12b76ec60e4df4a9a6aae1a6213c13": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "5c81cddb4d2b494e90a1dec801993e08": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_725e33cbc3464bb18c9222577ed1c2e7",
        "IPY_MODEL_3a30016b44a048d9bb2ee23bd2ff688c",
        "IPY_MODEL_afb2d774d03e43328aaeb2a8f8a2c0ed"
       ],
       "layout": "IPY_MODEL_378036cdca294e4e9889f892b365741a"
      }
     },
     "628525fec7604dc5a21933fb27593e3e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "67dc9dfed7b3455d880cd93756e9f2a9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "70a3cccd34274e37949392f334362508": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_7275e9b352d1417c9476c7acd1c7febe",
        "IPY_MODEL_03f5081ed2134a6486d4307b6aa1eae3",
        "IPY_MODEL_84bc4074c18442a08737e211a164ee4a"
       ],
       "layout": "IPY_MODEL_ba3cb84beaf140509d5ca1fdfced7462"
      }
     },
     "725e33cbc3464bb18c9222577ed1c2e7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_26b90cfc94204c9c8e879a831cf0becb",
       "placeholder": "​",
       "style": "IPY_MODEL_ed4e9f5bad6e4adc94714564b20b5ce5",
       "value": "Batches: 100%"
      }
     },
     "7275e9b352d1417c9476c7acd1c7febe": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_ed4d928dfcc24f5cbee212ed48456774",
       "placeholder": "​",
       "style": "IPY_MODEL_4323d0481b0043cb945f8bed0a50d257",
       "value": "Batches: 100%"
      }
     },
     "73e9495b7c8340c2989545e078974404": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "7533891afc7d4d1880203a33ba571980": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_56ed9d7809ac40ada4a35d8efb53dbc9",
       "placeholder": "​",
       "style": "IPY_MODEL_5c12b76ec60e4df4a9a6aae1a6213c13",
       "value": "Batches: 100%"
      }
     },
     "78c41d073bc94fffb4a0224024d225e8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_d01a1fb4cf9f4c6c98277d41b4f9dd98",
       "placeholder": "​",
       "style": "IPY_MODEL_8c790acdb3d5496390e457436b8fec57",
       "value": "Batches: 100%"
      }
     },
     "84bc4074c18442a08737e211a164ee4a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_e65169ee234b47758a6c30dd5d836d4f",
       "placeholder": "​",
       "style": "IPY_MODEL_628525fec7604dc5a21933fb27593e3e",
       "value": " 1/1 [00:00&lt;00:00,  3.12it/s]"
      }
     },
     "8c790acdb3d5496390e457436b8fec57": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "90bdd49159ae4685bafa1e9f250cd4d1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_4d0386d99c9f49eaa34719a50a5f7c7b",
       "placeholder": "​",
       "style": "IPY_MODEL_2f544ebd41a94be3bfb3b63df88330e8",
       "value": "Batches: 100%"
      }
     },
     "920ace06238b48658e2964f8740a7a18": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9661b40d5539487e9e893116c8d82369": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "971daf0512cb4c92aff6f878b9d0e7c7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "a06ccfe8a75a4baca328e43e5b8ec361": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "afb2d774d03e43328aaeb2a8f8a2c0ed": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_f0a2622866fd4ef4815d9e2569c8e10f",
       "placeholder": "​",
       "style": "IPY_MODEL_67dc9dfed7b3455d880cd93756e9f2a9",
       "value": " 1/1 [00:00&lt;00:00,  1.48it/s]"
      }
     },
     "b0c42ad4893f4bcd922b643d4c1c9661": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b487daee55ee42289d0927916c878169": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "b661329cb13c4ac8afdf360bd8a000ed": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ba3cb84beaf140509d5ca1fdfced7462": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "baab9d0f10854fd6bd87cbe75a0655f6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "cee6a1a3ea284cf6ae4b6159ba0482d5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "d01a1fb4cf9f4c6c98277d41b4f9dd98": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d9e9cb9cf01b4106bb6ac8104225888c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_2a9502a55d3d4823824eda9d2576d80e",
       "max": 162.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_e6fef5495b5548949cbe4fea5207a820",
       "value": 162.0
      }
     },
     "debc4074be544e27a1c64c41d451d62f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "decd1342c1c0455eaa2648ddc6c98839": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "e65169ee234b47758a6c30dd5d836d4f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e6fef5495b5548949cbe4fea5207a820": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "e90294d08dea4c8eb7f48a0fc3f93693": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "ebc3d1b28aa74a0ebbbddbc2e376b611": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_78c41d073bc94fffb4a0224024d225e8",
        "IPY_MODEL_f45bc8ee5fda4c7487eda513876aea9f",
        "IPY_MODEL_f6bebf46b35f4307b00f279de306b012"
       ],
       "layout": "IPY_MODEL_f6629770476845f5bc2052ca32cfeba6"
      }
     },
     "ed4d928dfcc24f5cbee212ed48456774": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ed4e9f5bad6e4adc94714564b20b5ce5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "f0a2622866fd4ef4815d9e2569c8e10f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f3962934ec9344e58188080d8cc61b32": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f3a4fcb410354877a5917b8344cb16b0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_debc4074be544e27a1c64c41d451d62f",
       "max": 162.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_379999ebfd884563b6051e9e2c24e341",
       "value": 162.0
      }
     },
     "f45bc8ee5fda4c7487eda513876aea9f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_b661329cb13c4ac8afdf360bd8a000ed",
       "max": 162.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_29332d9e289d40edb7a2667444bd1dd6",
       "value": 162.0
      }
     },
     "f6629770476845f5bc2052ca32cfeba6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f6bebf46b35f4307b00f279de306b012": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_413de19a7ff240869c3c90abf564fa66",
       "placeholder": "​",
       "style": "IPY_MODEL_4f08a6f3e7b4481baf890cd0a0fdb845",
       "value": " 162/162 [00:03&lt;00:00, 70.38it/s]"
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
